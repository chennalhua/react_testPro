{"version":3,"sources":["setupProxy.js","Login.js","Directory.js","AppRoute.js","App.js","reportWebVitals.js","index.js"],"names":["createProxyMiddleware","require","module","exports","app","apiProxy","target","changeOrigin","use","Login","useState","lineId","setLineId","state","randomBytes","toString","nonce","lineLogin","link","process","window","location","href","useEffect","query","url","parse","Object","keys","length","callbackURL","prototype","hasOwnProperty","call","reqBody","grant_type","code","redirect_uri","client_id","client_secret","axios","post","qs","stringify","headers","then","res","decodedIdToken","jwt","verify","data","id_token","algorithms","audience","issuer","sub","lineCanLogin","err","console","log","catch","error","swal","fire","icon","title","text","confirmButtonText","getAccessToken","validationSchema","Yup","shape","uid","required","pwd","formOptions","resolver","yupResolver","useForm","register","handleSubmit","reset","errors","formState","loadingBtn","id","params","URLSearchParams","append","API","defaults","withCredentials","ResponseCode","alert","eye","setEye","className","onSubmit","salesLoginData","htmlFor","name","type","message","style","right","top","onClick","faEye","faEyeSlash","disabled","width","height","role","Directory","setIsLoading","allData","setAllData","locAPI","get","locAry","forEach","item","index","push","filterLocAry","filter","ary","indexOf","setLocation","dept","setDept","depAry","department","getDep","filterDepAry","value","onChange","e","map","faUser","contact","extension","telephone","AppRoute","props","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","proxy"],"mappings":"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","file":"static/js/main.cdbd7164.chunk.js","sourcesContent":["const { createProxyMiddleware } = require('http-proxy-middleware');\r\n// const fs = require('fs');\r\nmodule.exports = function (app) {\r\n    const apiProxy = createProxyMiddleware('/api', {\r\n        target: 'https://ismart2.goldennet.com.tw:5000',\r\n        changeOrigin: true,\r\n        \"secure\": false,\r\n    });\r\n\r\n    app.use(apiProxy);\r\n};","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n//from\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\n\r\nimport randomBytes from \"randombytes\"\r\n\r\n//icon\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { default as swal } from 'sweetalert2'\r\n\r\n\r\nimport axios from 'axios';\r\nimport url from 'url';\r\nimport qs from 'qs';\r\nimport jwt from 'jsonwebtoken';\r\n\r\nconst Login = () => {\r\n    let [lineId, setLineId] = useState('');\r\n    const state = randomBytes(32).toString('hex');\r\n    const nonce = randomBytes(32).toString('hex');\r\n\r\n    const lineLogin = () => {\r\n        let link = 'https://access.line.me/oauth2/v2.1/authorize?';\r\n        link += 'response_type=code';\r\n        link += `&client_id=${process.env.REACT_APP_LINE_LOGIN_CHANNEL_ID_TEST}`;\r\n        link += `&redirect_uri=${process.env.REACT_APP_LINE_LOGIN_CALLBACK_URL_TEST}`;\r\n        link += `&state=${state}`;\r\n        link += `&nonce=${nonce}`;\r\n        link += '&scope=openid%20profile';\r\n        link += '&prompt=consent';\r\n        link += '&bot_prompt=normal';\r\n        // link += `&max_age=241000`; 登入後的有效時間\r\n        window.location.href = link;\r\n    };\r\n    useEffect(() => {\r\n        var urlParts = url.parse(window.location.href, true);\r\n        var query = urlParts.query;\r\n        const isLogin = () => {\r\n            if (Object.keys(query).length === 0) {\r\n                lineLogin();\r\n            }\r\n        }\r\n        isLogin()\r\n    });\r\n\r\n    const getAccessToken = (callbackURL) => {\r\n        var urlParts = url.parse(callbackURL, true);\r\n        var query = urlParts.query;\r\n        var hasCodeProperty = Object.prototype.hasOwnProperty.call(query, 'code');\r\n        if (hasCodeProperty) {\r\n            const reqBody = {\r\n                grant_type: 'authorization_code',\r\n                code: query.code,\r\n                redirect_uri: `${process.env.REACT_APP_LINE_LOGIN_CALLBACK_URL_TEST}`,\r\n                client_id: `${process.env.REACT_APP_LINE_LOGIN_CHANNEL_ID_TEST}`,\r\n                client_secret: `${process.env.REACT_APP_LINE_LOGIN_CHANNEL_SECRET_TEST}`\r\n            };\r\n            const reqConfig = {\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                }\r\n            };\r\n            axios\r\n                .post(\r\n                    'https://api.line.me/oauth2/v2.1/token',\r\n                    qs.stringify(reqBody),\r\n                    reqConfig\r\n                )\r\n                .then((res) => {\r\n                    try {\r\n                        const decodedIdToken = jwt.verify(res.data.id_token, `${process.env.REACT_APP_LINE_LOGIN_CHANNEL_SECRET_TEST}`, {\r\n                            algorithms: ['HS256'],\r\n                            audience: `${process.env.REACT_APP_LINE_LOGIN_CHANNEL_ID_TEST}`.toString(),\r\n                            issuer: 'https://access.line.me',\r\n                            // nonce: `${newId}`\r\n                        });\r\n                        setLineId(decodedIdToken.sub)\r\n                        lineCanLogin(decodedIdToken.sub);\r\n\r\n                        // if (setIdToken) setIdToken(decodedIdToken);\r\n                    } catch (err) {\r\n                        // If token is invalid.\r\n                        console.log(err);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        } else if (query.error) {\r\n            swal.fire({\r\n                icon: 'error',\r\n                title: '登入失敗 ><',\r\n                text: '需「許可」授權，才能驗證登入',\r\n                confirmButtonText: '重新登入',\r\n            }).then(function () {\r\n                lineLogin()\r\n            })\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAccessToken(window.location.href)\r\n    });\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        uid: Yup.string()\r\n            .required('請正確輸入帳號'),\r\n        // .email('Email is invalid'),\r\n        pwd: Yup.string()\r\n            // .min(6, 'Password must be at least 6 characters')\r\n            .required('請正確輸入密碼'),\r\n    });\r\n    const formOptions = { resolver: yupResolver(validationSchema) };\r\n\r\n    // get functions to build form with useForm() hook\r\n    const { register, handleSubmit, reset, formState } = useForm(formOptions);\r\n    const { errors } = formState;\r\n\r\n    let [loadingBtn] = useState(false)\r\n\r\n    //判斷 line 登入權限\r\n    const lineCanLogin = (id) => {\r\n        let params = new URLSearchParams();\r\n        params.append('lineid', 'Ufb5a74fdae4e3fb897371a8ac2f55dde');\r\n\r\n        let API = `${process.env.REACT_APP_GOLDEN_API5000}LineLogin`\r\n        axios.defaults.withCredentials = true;\r\n        axios.post(API, params, {\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8'\r\n            }\r\n        })\r\n            .then((res) => {\r\n                if (res.data.ResponseCode === '-2') {\r\n                    // window.location.href = '/lineid_blocked'\r\n                    alert('離職 ing')\r\n                } else if (res.data.ResponseCode === '-3') {\r\n                    swal.fire({\r\n                        icon: 'info',\r\n                        title: '不在使用權限內',\r\n                        text: '請進行業管系《帳號、密碼》登入驗證',\r\n                        confirmButtonText: '好的',\r\n                    })\r\n                } else {\r\n                    alert('可使用')\r\n                    // window.location.href = '/use_ismart_plus'\r\n                    // window.close();\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onSubmit = (data) => {\r\n        setEye(true);\r\n        let salesLoginData = new URLSearchParams();\r\n        salesLoginData.append('lineid', lineId);\r\n        salesLoginData.append('uid', data.uid);\r\n        salesLoginData.append('pwd', data.pwd);\r\n\r\n        let API = `${process.env.REACT_APP_GOLDEN_API5000}SalesLogin`\r\n        axios.post(API, salesLoginData)\r\n            .then((res) => {\r\n                console.log(res)\r\n                if (res.data.ResponseCode === '0') {\r\n                    swal.fire({\r\n                        icon: 'success',\r\n                        title: '!!驗證成功!!',\r\n                        text: '歡迎使用 iSmart +',\r\n                        confirmButtonText: '關閉',\r\n                    })\r\n                    reset();\r\n                } else if (res.data.ResponseCode === '-4') {\r\n                    swal.fire({\r\n                        icon: 'info',\r\n                        title: '此帳號不存在 ><',\r\n                        text: '請確認帳號是否輸入正確',\r\n                        confirmButtonText: '關閉',\r\n                    })\r\n                } else if (res.data.ResponseCode === '-5') {\r\n                    swal.fire({\r\n                        icon: 'error',\r\n                        title: '密碼錯誤 ><',\r\n                        text: '請確認帳號密碼是否輸入正確',\r\n                        confirmButtonText: '關閉',\r\n                    })\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n                reset();\r\n            })\r\n    }\r\n    //密碼眼睛\r\n    let [eye, setEye] = useState(true);\r\n    const handleEyeClick = () => {\r\n        if (eye) {\r\n            setEye(false);\r\n        } else {\r\n            setEye(true);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"container-fluid bg-mask vh-100\">\r\n                <div className=\"container\">\r\n\r\n                    {/* <h4 className=\"text-center fw-bolder text-golden-brown\">iSmart 登入</h4> */}\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <form onSubmit={handleSubmit(onSubmit)} className=\"col-12 col-md-6 col-lg-4\">\r\n                            <div className=\"form-group my-3\">\r\n                                <label htmlFor=\"uid\" className=\"fw-bolder text-golden-brown\">請輸入《業管系統》帳號</label>\r\n                                <input id=\"uid\" name=\"uid\" type=\"text\" {...register('uid')} className={`form-control ${errors.uid ? 'is-invalid' : ''}`}\r\n                                />\r\n                                <div className=\"invalid-feedback\">{errors.uid?.message}</div>\r\n                            </div>\r\n                            <div className=\"form-group my-3 position-relative\">\r\n                                <label htmlFor=\"pwd\" className=\"fw-bolder text-golden-brown\">請輸入《業管系統》密碼</label>\r\n                                <input id=\"pwd\" name=\"pwd\" type={eye ? 'password' : 'text'} className={`form-control ${errors.pwd ? 'is-invalid' : ''}`}\r\n                                    {...register('pwd')}\r\n                                />\r\n                                <div className=\"invalid-feedback\">{errors.pwd?.message}</div>\r\n                                <button type=\"button\" className=\"btn text-dark-blue position-absolute\" style={{ right: '-1px', top: '24px' }} onClick={handleEyeClick}><FontAwesomeIcon icon={eye ? faEye : faEyeSlash} /></button>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-golden-brown w-100 mt-3\" disabled={loadingBtn ? 'disabled' : ''}>\r\n                                <div className={`spinner-border text-light spinner-border--width mx-2 ${loadingBtn ? 'd-inline-block' : 'd-none'}`} style={{ width: '1rem', height: '1rem' }} role=\"status\" ></div>\r\n                                登入\r\n                            </button>\r\n                            {/* <button type=\"button\" onClick={() => reset()} className=\"btn btn-secondary\">Reset</button> */}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n//icon\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst Directory = () => {\r\n    //component\r\n    let [isLoading, setIsLoading] = useState(true);\r\n\r\n    //篩選地區\r\n    let [allData, setAllData] = useState([])\r\n    useEffect(() => {\r\n        let locAPI = `${process.env.REACT_APP_GOLDEN_API5000}Gcd/loc=`;\r\n        console.log(locAPI)\r\n        axios.defaults.withCredentials = true;\r\n        axios.get(locAPI)\r\n            .then((res) => {\r\n                if (res.data.ResponseCode == '-1') {\r\n                    console.log('-1')\r\n                    return\r\n                } else {\r\n                    setAllData(res.data)\r\n                    setIsLoading(false)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    });\r\n\r\n\r\n    let locAry = []; //放置所有從 API DATA 取出的 location\r\n    const getLocation = (data) => {\r\n        data.forEach((item, index) => {\r\n            locAry.push(item.location)\r\n        })\r\n    }\r\n    getLocation(allData)\r\n    let filterLocAry = locAry.filter((item, index, ary) => {\r\n        return ary.indexOf(item) === index\r\n    }) //篩選過濾出重複後的陣列\r\n    //篩選地區 end\r\n\r\n    let [location, setLocation] = useState('總公司'); //地區\r\n    let [dept, setDept] = useState('董事長室'); //部門\r\n\r\n    //篩選部門\r\n    let depAry = [];\r\n    const getDep = (data) => {\r\n        data.forEach((item, index) => {\r\n            if (location === item.location) {\r\n                depAry.push(item.department)\r\n            }\r\n        })\r\n    }\r\n    getDep(allData);\r\n\r\n    let filterDepAry = depAry.filter((item, index, ary) => {\r\n        return ary.indexOf(item) === index\r\n    }) //篩選過濾出重複後的陣列\r\n\r\n    //篩選部門 end\r\n\r\n    //change location\r\n    const handleLocChange = (e) => {\r\n        let { value } = e.target\r\n        setLocation(value);\r\n        allData.map((item) => {\r\n            if (value === item.location) {\r\n                setDept(item.department)\r\n            }\r\n            return true\r\n        })\r\n    }\r\n    //change location end\r\n\r\n    //change department\r\n    const handleDepChange = (e) => {\r\n        let { value } = e.target\r\n        setDept(value);\r\n    }\r\n    //change department end\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container mt-3\">\r\n                <h5>公司通訊 頁面</h5>\r\n                <p>目前環境:{process.env.NODE_ENV}</p>\r\n                <div className=\"d-flex pb-2\">\r\n                    <select className=\"form-select\" value={location} onChange={handleLocChange}>\r\n                        {\r\n                            filterLocAry.map((item, index) => {\r\n                                return <option key={item} value={item}>{item}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                    <select className=\"form-select ms-2\" value={dept} onChange={handleDepChange}>\r\n                        {\r\n                            filterDepAry.map((item, index) => {\r\n                                return <option key={item} value={item}>{item}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <ul className=\"list-unstyled page-content-link fw-bolder\" value>\r\n                    {\r\n                        allData.map((item, index) => {\r\n                            if (location === item.location && dept === item.department) {\r\n                                return (\r\n                                    <li className=\"border-bottom py-3\" key={index}>\r\n                                        <div className=\"d-flex justify-content-between flex-wrap\">\r\n                                            <span>\r\n                                                <FontAwesomeIcon className=\"me-2 text-dark-blue\" icon={faUser} />\r\n                                                {item.contact}\r\n                                            </span>\r\n                                            <span>\r\n                                                {item.extension === '' ? ' - ' : item.extension} /\r\n                                                <a href={`tel:+886-${item.telephone}`} className=\"ms-2\">{item.telephone}</a>\r\n                                            </span>\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            }\r\n                            return true\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}\r\nexport default Directory;","import React from 'react';\r\nimport { HashRouter  as Router, Route } from \"react-router-dom\";\r\n\r\nimport Login from \"./Login\"; //登入\r\nimport Test from \"./Directory\"; //登入\r\n\r\nconst AppRoute = (props) => {\r\n    return (\r\n        <Router>\r\n            <Route exact path=\"/\"><Login /></Route> {/* 登入 */}\r\n            <Route exact path=\"/test\"><Test /></Route> {/* 登入 */}\r\n        </Router>\r\n    )\r\n}\r\nexport default AppRoute","import React from 'react';\r\n\r\nimport AppRoute from \"./AppRoute\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <AppRoute />\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport proxy from './setupProxy'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nproxy()\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}